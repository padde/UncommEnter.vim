*UncommEnter.txt*

Author: Patrick Oscity <patrick.oscity@gmail.com>

This plugin is licensed under the terms of the BSD License. Please see
UncommEnter.vim for the license in its entirety.

==============================================================================
UncommEnter                                 *UncommEnter*

1. Introduction                             |uncommenter-intro|
2. UncommEnter Usage                        |uncommenter-usage|
3. UncommEnter Options                      |uncommenter-options|
    Enabled                                 |uncommenter-enabled|
4. Compatibility with other Plugins         |uncommenter-compatibility|

==============================================================================
1. Introduction                             *uncommenter-intro*

UncommEnter lets you end a comment series caused by formatoption "r" by
simply hitting <cr> (Enter) on the last empty line of a comment.

==============================================================================
2. UncommEnter Usage                        *uncommenter-usage*

Examples in Ruby ('|' represents the cursor):

    # this is a comment|

hit <cr>

    # this is a comment
    # |

hit <cr> again

    # this is a comment
    |

This means you don't have to type <Esc>S or <C-u> any more. UncommEnter is
smart enough to not fiddle around with comments when you're in the middle of a
multi-line comment like this one:

    # this is a comment|
    # that spans multiple lines

hit <cr>

    # this is a comment
    # |
    # that spans multiple lines

hit <cr> again

    # this is a comment
    #
    # |
    # that spans multiple lines

The tradeoff is that if you actually want multiple empty comment lines,
you have to re-add one line manually:

    # this is a comment|

hit <cr>

    # this is a comment
    # |

hit <Esc>o

    # this is a comment
    #
    # |

UncommEnter will however not delete the comment marker if the previous
line is also just an empty comment. That means for successive empty
comment lines, you can just hit <cr> as normal:

    # this is a comment
    #
    # |

hit <cr> twice

    # this is a comment
    #
    #
    #
    # |

==============================================================================
3. UncommEnter Options                      *uncommenter-options*

Map <cr> to end comment             *uncommenter-enabled*
                                    *g:UncommEnterEnabled*

g:UncommEnterEnabled (default: 1)

Defines whether or not UncommEnter is enabled, i.e. whether <cr> is remapped
or not. You can do

    let g:UncommEnterEnabled=0

in your vimrc to disable UncommEnter. This will only take effect on startup.

==============================================================================
4. Compatibility with other Plugins         *uncommenter-compatibility*

UncommEnter has been tested with other plugins that remap <cr>, in particular:

* AutoPairs 1.3.2
* Endwise 1.1

vim:tw=78:ts=8:ft=help:norl:
